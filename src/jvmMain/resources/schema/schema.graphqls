# tag::functions[]
type Query {
    search(text: String, limit: Int, offset: Int, order: String, language: [String], resType: [String], related: [String], contactPoints: [String]): MetaDataPage # <1>
    getRecord(id: String) : MetadataRecord # <2>
}

type Mutation { # <3>
    removeRelated(recordId: String, relatedId: String) : MetadataRecord # <3>
}
#end::functions[]

type MetaDataPage {
    facets: [Facets]
    totalPages: Int,
    metaData: [MetadataRecord]
}

type Facets {
    name: String
    values: [SubFacets]
}

type SubFacets {
    field: String,
    docNum: Int
}

type MetadataRecord {
    ID: String
    title: String
    description: String
    primaryTopic: Resource
    type: String
    details: ContentMetadata
}

type ResourceElement {
    type: String,
    data: Resource
}

union Resource = Dataset | Service


type RelatedElements {
    related: Boolean,
    relatedRecord: MetadataRecord
}

type Service {
    type: String
    title: String
    coupledDatasets: [RelatedElements]
}

type Dataset {
    type: String
    title: String
    coupledServices: [RelatedElements]
}

type Format {
    name: String,
    version: String
}

type Transfer {
    URL: String
}

type ContactPoint {
    individual: String,
    phone: String,
    name: String,
    mail: String,
    onlineSource: String
}

type ContentMetadata {
    language: String,
    uploadDate: String,
    contactPoint: ContactPoint,
    accessUrl: String,
    distributionFormats: [Format],
    distributionTransfers: [Transfer]
}